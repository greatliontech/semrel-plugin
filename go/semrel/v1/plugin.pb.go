// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: semrel/v1/plugin.proto

package semrelpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Commit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        string            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Description string            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Attention   bool              `protobuf:"varint,3,opt,name=attention,proto3" json:"attention,omitempty"`
	Scope       *string           `protobuf:"bytes,4,opt,name=scope,proto3,oneof" json:"scope,omitempty"`
	Body        *string           `protobuf:"bytes,5,opt,name=body,proto3,oneof" json:"body,omitempty"`
	Footer      map[string]string `protobuf:"bytes,6,rep,name=footer,proto3" json:"footer,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Commit) Reset() {
	*x = Commit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semrel_v1_plugin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Commit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Commit) ProtoMessage() {}

func (x *Commit) ProtoReflect() protoreflect.Message {
	mi := &file_semrel_v1_plugin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Commit.ProtoReflect.Descriptor instead.
func (*Commit) Descriptor() ([]byte, []int) {
	return file_semrel_v1_plugin_proto_rawDescGZIP(), []int{0}
}

func (x *Commit) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Commit) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Commit) GetAttention() bool {
	if x != nil {
		return x.Attention
	}
	return false
}

func (x *Commit) GetScope() string {
	if x != nil && x.Scope != nil {
		return *x.Scope
	}
	return ""
}

func (x *Commit) GetBody() string {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return ""
}

func (x *Commit) GetFooter() map[string]string {
	if x != nil {
		return x.Footer
	}
	return nil
}

type Version struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Major      uint64  `protobuf:"varint,1,opt,name=major,proto3" json:"major,omitempty"`
	Minor      uint64  `protobuf:"varint,2,opt,name=minor,proto3" json:"minor,omitempty"`
	Patch      uint64  `protobuf:"varint,3,opt,name=patch,proto3" json:"patch,omitempty"`
	Prefix     *string `protobuf:"bytes,4,opt,name=prefix,proto3,oneof" json:"prefix,omitempty"`
	Prerelease *string `protobuf:"bytes,5,opt,name=prerelease,proto3,oneof" json:"prerelease,omitempty"`
	Build      *string `protobuf:"bytes,6,opt,name=build,proto3,oneof" json:"build,omitempty"`
}

func (x *Version) Reset() {
	*x = Version{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semrel_v1_plugin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_semrel_v1_plugin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_semrel_v1_plugin_proto_rawDescGZIP(), []int{1}
}

func (x *Version) GetMajor() uint64 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *Version) GetMinor() uint64 {
	if x != nil {
		return x.Minor
	}
	return 0
}

func (x *Version) GetPatch() uint64 {
	if x != nil {
		return x.Patch
	}
	return 0
}

func (x *Version) GetPrefix() string {
	if x != nil && x.Prefix != nil {
		return *x.Prefix
	}
	return ""
}

func (x *Version) GetPrerelease() string {
	if x != nil && x.Prerelease != nil {
		return *x.Prerelease
	}
	return ""
}

func (x *Version) GetBuild() string {
	if x != nil && x.Build != nil {
		return *x.Build
	}
	return ""
}

type ReleaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next    *Version  `protobuf:"bytes,1,opt,name=next,proto3" json:"next,omitempty"`
	Current *Version  `protobuf:"bytes,2,opt,name=current,proto3" json:"current,omitempty"`
	Commits []*Commit `protobuf:"bytes,3,rep,name=commits,proto3" json:"commits,omitempty"`
}

func (x *ReleaseRequest) Reset() {
	*x = ReleaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semrel_v1_plugin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseRequest) ProtoMessage() {}

func (x *ReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_semrel_v1_plugin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseRequest.ProtoReflect.Descriptor instead.
func (*ReleaseRequest) Descriptor() ([]byte, []int) {
	return file_semrel_v1_plugin_proto_rawDescGZIP(), []int{2}
}

func (x *ReleaseRequest) GetNext() *Version {
	if x != nil {
		return x.Next
	}
	return nil
}

func (x *ReleaseRequest) GetCurrent() *Version {
	if x != nil {
		return x.Current
	}
	return nil
}

func (x *ReleaseRequest) GetCommits() []*Commit {
	if x != nil {
		return x.Commits
	}
	return nil
}

type ReleaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReleaseResponse) Reset() {
	*x = ReleaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semrel_v1_plugin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseResponse) ProtoMessage() {}

func (x *ReleaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_semrel_v1_plugin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseResponse.ProtoReflect.Descriptor instead.
func (*ReleaseResponse) Descriptor() ([]byte, []int) {
	return file_semrel_v1_plugin_proto_rawDescGZIP(), []int{3}
}

var File_semrel_v1_plugin_proto protoreflect.FileDescriptor

var file_semrel_v1_plugin_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x65, 0x6d, 0x72, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x73, 0x65, 0x6d, 0x72, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x22, 0x95, 0x02, 0x0a, 0x06, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x06, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x6d, 0x72, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x65, 0x72,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x1a, 0x39, 0x0a,
	0x0b, 0x46, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xcc, 0x01, 0x0a, 0x07,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x6a, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6d, 0x69,
	0x6e, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x70, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x70, 0x72,
	0x65, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x05, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x72, 0x65, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x0e, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a,
	0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65,
	0x6d, 0x72, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x6d, 0x72, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x6d, 0x72, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73,
	0x22, 0x11, 0x0a, 0x0f, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x32, 0x52, 0x0a, 0x0c, 0x53, 0x65, 0x6d, 0x72, 0x65, 0x6c, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x12, 0x42, 0x0a, 0x07, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x19,
	0x2e, 0x73, 0x65, 0x6d, 0x72, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x6d, 0x72,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x72, 0x65, 0x61, 0x74, 0x6c, 0x69, 0x6f, 0x6e, 0x74,
	0x65, 0x63, 0x68, 0x2f, 0x73, 0x65, 0x6d, 0x72, 0x65, 0x6c, 0x2d, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x65, 0x6d, 0x72, 0x65, 0x6c, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_semrel_v1_plugin_proto_rawDescOnce sync.Once
	file_semrel_v1_plugin_proto_rawDescData = file_semrel_v1_plugin_proto_rawDesc
)

func file_semrel_v1_plugin_proto_rawDescGZIP() []byte {
	file_semrel_v1_plugin_proto_rawDescOnce.Do(func() {
		file_semrel_v1_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(file_semrel_v1_plugin_proto_rawDescData)
	})
	return file_semrel_v1_plugin_proto_rawDescData
}

var file_semrel_v1_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_semrel_v1_plugin_proto_goTypes = []any{
	(*Commit)(nil),          // 0: semrel.v1.Commit
	(*Version)(nil),         // 1: semrel.v1.Version
	(*ReleaseRequest)(nil),  // 2: semrel.v1.ReleaseRequest
	(*ReleaseResponse)(nil), // 3: semrel.v1.ReleaseResponse
	nil,                     // 4: semrel.v1.Commit.FooterEntry
}
var file_semrel_v1_plugin_proto_depIdxs = []int32{
	4, // 0: semrel.v1.Commit.footer:type_name -> semrel.v1.Commit.FooterEntry
	1, // 1: semrel.v1.ReleaseRequest.next:type_name -> semrel.v1.Version
	1, // 2: semrel.v1.ReleaseRequest.current:type_name -> semrel.v1.Version
	0, // 3: semrel.v1.ReleaseRequest.commits:type_name -> semrel.v1.Commit
	2, // 4: semrel.v1.SemrelPlugin.Release:input_type -> semrel.v1.ReleaseRequest
	3, // 5: semrel.v1.SemrelPlugin.Release:output_type -> semrel.v1.ReleaseResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_semrel_v1_plugin_proto_init() }
func file_semrel_v1_plugin_proto_init() {
	if File_semrel_v1_plugin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_semrel_v1_plugin_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Commit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semrel_v1_plugin_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Version); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semrel_v1_plugin_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ReleaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semrel_v1_plugin_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ReleaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_semrel_v1_plugin_proto_msgTypes[0].OneofWrappers = []any{}
	file_semrel_v1_plugin_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_semrel_v1_plugin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_semrel_v1_plugin_proto_goTypes,
		DependencyIndexes: file_semrel_v1_plugin_proto_depIdxs,
		MessageInfos:      file_semrel_v1_plugin_proto_msgTypes,
	}.Build()
	File_semrel_v1_plugin_proto = out.File
	file_semrel_v1_plugin_proto_rawDesc = nil
	file_semrel_v1_plugin_proto_goTypes = nil
	file_semrel_v1_plugin_proto_depIdxs = nil
}
